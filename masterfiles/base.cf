bundle common base_config
{
 vars:
	"net_hostname" string => "ocemr-server";
	"net_domain" string => "ocemr";
	"net_dev" string => "eth0";
	"net_addr" string => "192.168.7.2";
	"net_mask" string => "255.255.255.0";
	"net_dns1" string => "8.8.4.4";
	"net_dns2" string => "8.8.8.8";
	"net_dhcp_min" string => "192.168.7.101";
	"net_dhcp_max" string => "192.168.7.199";
}

bundle agent base
{

methods:
		"any" usebundle => base_networking();

}

bundle agent base_networking
{
packages:
		"dnsmasq"
			package_policy => "add",
			package_method => generic,
			classes => if_ok("base_networking_package_dnsmasq");
			
methods:
		"any" usebundle => insert_template(
			"/etc/network/interfaces", "net_interfaces" );

		"any" usebundle => insert_template(
			"/etc/hostname", "net_hostname" );

		"any" usebundle => insert_template(
			"/etc/mailname", "net_mailname");

		"any" usebundle => insert_template(
			"/etc/hosts", "net_hosts");

		"any" usebundle => insert_template(
			"/etc/resolv.conf", "net_resolv_conf");

	base_networking_package_dnsmasq::

		"any" usebundle => insert_template(
			"/etc/dnsmasq.conf", "net_dnsmasq_conf");

	insert_template__etc_network_interfaces_repaired::

		"any" usebundle => restart_interface("$(base_config.net_dev)");

	insert_template__etc_dnsmasq_conf_repaired::

		"any" usebundle => restart_service("dnsmasq");
}

bundle agent restart_interface(iface_name)
{
commands:
	debian::
		"/sbin/ifdown $(iface_name)";
		"/sbin/ifup $(iface_name)";
}
bundle agent restart_service(s)
{
commands:
	debian::
		"/usr/sbin/invoke-rc.d $(s) restart";
}
bundle agent insert_template(dst, src)
{
vars:
		"c_dst"
			string => canonify("$(dst)");
		"f_src"
			string => "$(sys.workdir)/inputs/templates/$(src).dat";

files:
		"$(dst)"
			create => "true",
			classes => if_repaired(
				"insert_template_$(c_dst)_repaired"),
			edit_template => "$(f_src)",
			perms => m("644");
reports:
	cfengine::
		"Failed to insert template $(f_src) -> $(dst)"
			ifvarclass => "insert_template_$(c_dst)_notkept";
}
bundle agent insert_template_string(dst, template )
{
vars:
		"c_dst"
			string => canonify("$(dst)");

files:
		"$(dst)"
			create => "true",
			classes => if_repaired(
				"insert_template_$(c_dst)_repaired"),
			edit_template => "$(f_src)",
			perms => m("644");
reports:
	cfengine::
		"Failed to insert template $(f_src) -> $(dst)"
			ifvarclass => "insert_template_$(c_dst)_notkept";
}
